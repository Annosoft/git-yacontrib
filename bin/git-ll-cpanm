#! /bin/sh

SUBDIRECTORY_OK=1
NONGIT_OK=1
OPTIONS_SPEC="\
git ll-cpanm [ -L <local-lib-dir> ] <cpan-name> ...

This installs CPAN (Perl5) libraries into a local::lib directory,
using cpanm or cpan.  It does not currently do anything to help you
set up ~/.cpan or ~/.cpanm .

First it runs \"git ll-init [ -L <dir> ] --find --perl5\" to safely
obtain an initialised directory.  This also allows several mechanisms
to provide a default for the local-lib-dir.

Then it installs modules.  Might construct a useful commit message
later.

Then it adds and commits everything.  Install errors should cause a
clean reset, leaving a tag on any partial install files.
--
help     Show help
L,lldir Directory to operate upon.  Takes default from git-ll-init(1).
v,verbose! More noise"

. "$(git --exec-path)/git-sh-setup"

ll_main() {
    local sw lldir
    unset CDPATH

    prog="$( basename $0 | sed -e 's/^git-/git /' )"

    # Read opts - normalised by "git rev-parse --parseopt"
    verb_v=
    verb_q=-q
    verb_printf=true
    while [ $# -gt 0 ]; do
	sw="$1"
	shift
	case "$sw" in
	    -L)	lldir="$1"
		shift ;;
	    -v) verb_v=-v
		verb_q=
		verb_printf=printf
		;;
	    --) break ;;
	esac
    done
    [ $# -eq 0 ] && die "$prog: nothing to do"

    # Choose the lldir.  It may not exist yet.
    lldir="$( git ll-init ${lldir:+-L "$lldir"} $verb_v --find --perl5 )" \
	|| die "$prog: aborting, no local-lib-dir"

    set -x
    cd "$lldir" || die "$prog: failed cd $lldir"
    . ./perl5.sh || die "$prog: failed to source perl5.sh"
    set +x

    while [ $# -gt 0 ]; do
	sw=$1
	shift
	
	ll_install "$sw" || die "$prog: gave up after $sw failed"
    done
}

ll_install() {
    local instwhat instwith instret
    instwhat="$1"

    # We want one commit for our work, so push any other dirty files
    # into history.
    git diff --cached --quiet --exit-code || \
	git commit -m '(files staged before install op)'
    git add -A . 
    git diff --cached --quiet --exit-code || \
	git commit -m '(files unstaged before install op)'

    instwith="$( which cpanm || which cpan )" || \
	die "$prog: no cpanm or cpan, cannot proceed"

    echo "[i] $instwith $instwhat" >&2
    "$instwith" "$instwhat"
    instret=$?
    echo "[d] $0: $instwith $instwhat: returned $instret" >&2

    git add -A .
    if git diff --cached --quiet --exit-code; then
	:
	# Nothing changed.  Install was no-op or clean fail.
	echo "[d] $0: nothing to commit" >&2
    else
	git commit -m "(+) $instwith $instwhat"

	if [ $instret != 0 ]; then
	    # Install failed, files changed.  We clean up.
	    git tag -f \
		-m "preserved for debugging: install exit code $instret" \
		"$( echo "fail/$instwhat" | tr -s ' ./:' _ )"
	    # Tagname exclusions are probably adequate but not comprehensive
            # XXX: assume any existing tag was not pushed.  This is for debug.
	    git reset --hard HEAD^
	fi
    fi

    return $instret
}

ll_main "$@"
